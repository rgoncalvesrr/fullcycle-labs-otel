services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - weather-api-otel

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - weather-api-otel
      -
  zipkin:
    container_name: zipkin
    hostname: zipkin
    restart: always
    image: openzipkin/zipkin:latest
    ports:
      - 9411:9411 # Port used for the Zipkin UI and HTTP Api
    environment:
      - STORAGE_TYPE=mem
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    networks:
      - weather-api-otel

  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: always
    command: [ "--config=/etc/otelcol-contrib/config.yaml" ]
    ports:
      - 8888:8888 # Métricas expostas para o Prometheus
      - 8889:8889 # Exportador de métricas para o Prometheus
      - 4317:4317 # OTLP gRPC receiver
    volumes:
      - ./.docker/otel_provider-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    depends_on:
      - zipkin

  orchestrator-api:
    container_name: orchestrator-api-api
    hostname: orchestrator-api-api
    restart: always
    image: rgoncalvesr/orchestrator-api:latest
    build:
      dockerfile: Dockerfile
      context: .
      tags:
        - rgoncalvesr/orchestrator-api-api:latest
      args:
        - TARGET_API=orchestrator-api-api
        - API_PORT=8081
    ports:
      - 8081:8081
    env_file:
      - app.env
    depends_on:
      - otel-collector
    networks:
      - weather-api-otel

  input-api:
    container_name: input-api-api
    hostname: input-api-api
    restart: always
    image: rgoncalvesr/input-api:latest
    build:
      dockerfile: Dockerfile
      context: .
      tags:
        - rgoncalvesr/input-api-api:latest
      args:
        - TARGET_API=input-api-api
        - API_PORT=8080
    ports:
      - 8080:8080
    env_file:
      - app.env
    depends_on:
      - orchestrator-api
    networks:
      - weather-api-otel

networks:
  weather-api-otel:

